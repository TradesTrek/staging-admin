import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import React, { useEffect, useState } from "react";
import DashboardHeader from "../../components/header/DashboardHeader";

import SideBar from "../../components/side-bar/SideBar";
import { userService } from "../../services";
import { confirmAlert } from "react-confirm-alert";
import { toast } from "react-toastify";
import AddSubscription from "../../components/subscription/AddSubscription";
import EditSubscription from "../../components/subscription/EditSubscription";
import { subscriptionService } from "../../services/subscription.service";
import { useRouter } from "next/router";
import { gameService } from "../../services/game.service";
import IncreaseDecrease from "../../components/IncreaseDecrease/IncreaseDecrease";
import ReactPaginate from "react-paginate";

export default function GameRank() {
  useEffect(() => {
    document.body.classList.remove("has--tabs");
  });

  const [holiday, setHoliday] = useState();
  const [page, setPage] = useState(1);
  const [allPage, setAllPage] = useState(1);

  const router = useRouter();
  useEffect(() => {
    if (router?.query?.gameId) {
      GetRank(router?.query?.gameId, page);
    }
  }, [router]);
  const GetRank = (gameId, page) => {
    gameService
      .getRank(gameId, page)
      .then((res) => {
        if (res.success) {
          setHoliday(res.data);
          setAllPage(res.pages);
        }
      })
      .catch((err) => console.log(err));
  };
  const handlePageClick = ({ selected }) => {
    GetRank(router?.query?.gameId, selected + 1);
    setPage(selected + 1);
  };

  return (
    <>
      <Head>
        <title>Subscription Lists</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <SideBar />
      <div className="dashboard sideBarOpen">
        <DashboardHeader />
        <div className="contentWrapper">
          <div className="dashboard_content">
            <div className="table--layout">
              {(holiday && holiday.length > 0) ? (
                <table>
                  <thead>
                    <tr>
                      <th
                        style={{ width: "3rem" }}
                        className="sorting__disabled"
                      >
                        Rank
                      </th>
                      <th className="desc sorting__disabled">Name</th>
                      <th className="asc desc sorting__disabled">Email</th>
                      <th className="asc desc sorting__disabled">
                        Account Value
                      </th>
                      <th className="asc desc sorting__disabled">
                        Today’s Change
                      </th>

                      <th className="asc desc sorting__disabled">
                        Overall Change
                      </th>
                    </tr>
                  </thead>
                  <tbody>
                    {holiday.map((item, i) => {
                      return (
                        <tr key={i}>
                          <td>{item?.rank}</td>
                          <td>
                            {item?.result?.firstName || ""}{" "}
                            {item?.result?.lastName || ""}
                          </td>
                          <td>{item?.result?.email || ""}</td>
                          <td>
                            ₦{" "}
                            {item?.accountValue
                              ?.toFixed(2)
                              ?.toString()
                              .replace(/\B(?=(\d{3})+(?!\d))/g, ",")}
                          </td>
                          {IncreaseDecrease(
                            item?.profitOrLossToday,
                            (item?.profitOrLossToday * 100) / item?.accountValue
                          )}

                          {IncreaseDecrease(
                            item?.annualReturn,
                            (item?.annualReturn * 100) / item?.accountValue
                          )}
                        </tr>
                      );
                    })}
                  </tbody>
                </table>
              ):<div style={{padding:'20px'}}><h1 style={{textAlign:'center'}}>No Data Found</h1></div>}
             {(holiday && holiday.length > 0) && <ReactPaginate
                previousLabel={"prev"}
                nextLabel={"next"}
                breakLabel={"..."}
                breakClassName={"break-me"}
                pageCount={allPage}
                //         pageCount={Math.ceil(users?.total / users?.limit)}
                marginPagesDisplayed={2}
                pageRangeDisplayed={5}
                onPageChange={handlePageClick}
                containerClassName={"pagination"}
                subContainerClassName={"pages pagination"}
                activeClassName={"active"}
              />}
            </div>
          </div>
        </div>
      </div>
    </>
  );
}
