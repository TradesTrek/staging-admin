import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import React, { useEffect, useRef, useState } from "react";
import DashboardHeader from "../../components/header/DashboardHeader";

import SideBar from "../../components/side-bar/SideBar";
import { userService } from "../../services";
import { confirmAlert } from "react-confirm-alert";
import { toast } from "react-toastify";
import moment from "moment";
import { useRouter } from "next/router";
import { CSVLink } from "react-csv";

export default function UserTradeHistory() {
  useEffect(() => {
    document.body.classList.remove("has--tabs");
  });

  const [history, setHistory] = useState([]);
  const [gameId, setGameId] = useState("");
  const [userId, setUserId] = useState("");
  const [loadingTrade, setLoadingTrade] = useState(false);
  const [tradeData, setTradeData] = useState([]);
  const router = useRouter();
  const tradehistory = useRef();

  const [tradeHeaders, setTradeHeaders] = useState([
    {
      label: "Username",
      key: "username",
    },
    { label: "Date", key: "updatedAt" },
    { label: "Symbol", key: "symbol" },
    { label: "Trade Type", key: "action" },
    { label: "Quantity", key: "quantity" },
    { label: "Price", key: "rate" },
  ]);
  useEffect(() => {
    if (router?.query?.id && router?.query?.gameId) {
      setUserId(router?.query?.id);
      setGameId(router?.query?.gameId);

      GetTradeHistory(router?.query?.id, router?.query?.gameId);
    }
  }, [router]);
  const GetTradeHistory = (id, gameid) => {
    userService
      .getUserTradeHistory(id, gameid)
      .then((res) => {
        if (res.success) {
          setHistory(res.data);
        }
      })
      .catch((err) => console.log(err));
  };

  const downloadTradeHistory = async (id, game) => {
    setLoadingTrade(true);
    const { data } = await userService.downloadUserTradeHistory(id,game);
    setTradeData(data);
    setTimeout(() => {
      tradehistory.current.link.click();
      setLoadingTrade(false);
    }, 2000);
  };

  return (
    <>
      <Head>
        <title>TradeHistory</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <SideBar />
      <div className="dashboard sideBarOpen">
        <DashboardHeader />
        <div className="contentWrapper">
          <div className="dashboard_content">
            {/* <h1 className="dashboard__title">All Locks</h1> */}

            {/* Filter and search box */}

            <div className="btnLists">
              <ul>
                <li>
                  <Link href="javascript:void(0)">
                    <a className="btn" onClick={() => router.back()}>
                      Back To Portfolio
                    </a>
                  </Link>
                </li>

                {/* <li>
                  <form>
                    <input type="text" placeholder="Search by User Name..." />
                  </form>
                </li> */}
              </ul>
            </div>

            <div className="table--layout">
              <table>
                <thead>
                  <tr>
                    <th style={{ width: "3rem" }} className="sorting__disabled">
                      <input type="checkbox" name="select--all" />
                    </th>
                    <th className="desc sorting__disabled">Stock Symbol</th>
                    <th className="asc desc sorting__disabled">Action</th>
                    <th className="asc desc sorting__disabled">Quantity</th>
                    <th className="asc desc sorting__disabled">Rate</th>

                    <th className="asc desc sorting__disabled">Created Date</th>
                    <th className="asc desc sorting__disabled">Status</th>

                    {/* <th style={{ width: "4rem" }} className="sorting__disabled">
                      Actions
                    </th> */}
                  </tr>
                </thead>
                <tbody>
                  {history.length > 0 ? (
                    history.map((item, i) => {
                      return (
                        <tr key={i}>
                          <td>
                            <input type="checkbox" />
                          </td>
                          <td>{item.symbol}</td>
                          <td>{item.action}</td>
                          <td>{item.quantity}</td>
                          <td>{item.rate?.toFixed(2)}</td>
                          <td>{moment(item.createdAt).format("MMM Do YY")}</td>
                          <td>{item.status}</td>

                          {/* <td
                            onClick={() => {
                              setTableAction(!tableAction),
                                setIsUserToggle(item._id);
                            }}
                            // ref={notificationRef}
                          >
                            <span className="three--vertical--dots">
                              <span></span>
                              <span></span>
                              <span
                                onClick={() => {
                                  setTableAction(!tableAction),
                                    setIsUserToggle(item._id);
                                }}
                              ></span>
                            </span>
                            {tableAction && isUserToggle === item._id ? (
                              <span className="tableActions" key={isUserToggle}>
                                <Link href="javascript:void(0)">
                                  <a
                                    className="edit__detail"
                                    onClick={() => {
                                      setEditUserForm(true), setUserData(item);
                                    }}
                                  >
                                    Edit User
                                  </a>
                                </Link>
                                <Link href="javascript:void(0)">
                                  <a
                                    className="delete__lock"
                                    onClick={() => {
                                      confirmDelete(item._id);
                                    }}
                                  >
                                    Delete User
                                  </a>
                                </Link>
                              </span>
                            ) : (
                              " "
                            )}
                          </td> */}
                        </tr>
                      );
                    })
                  ) : (
                    <tr>
                      <td style={{ textAlign: "center" }} colSpan={7}>
                        No History Found
                      </td>
                    </tr>
                  )}
                </tbody>
              </table>
            </div>
            {history.length>0 && <div
              className="btnLists"
              style={{
                display: "flex",
                justifyContent: "flex-end",
                padding: "20px 0px",
              }}
            >
              <ul>
                <li>
                 {loadingTrade?<Link href="javascript:void(0)">
                    <a
                      className="btn"
                    >
                      Downloading...
                    </a>
                  </Link>: <Link href="javascript:void(0)">
                    <a
                      className="btn"
                      onClick={() => downloadTradeHistory(userId, gameId)}
                    >
                      Download TradeHistory
                    </a>
                  </Link>}
                  <CSVLink
                    style={{ display: "none" }}
                    ref={tradehistory}
                    headers={tradeHeaders}
                    data={tradeData}
                  >
                    Download me
                  </CSVLink>
                </li>

                {/* <li>
                  <form>
                    <input type="text" placeholder="Search by User Name..." />
                  </form>
                </li> */}
              </ul>
            </div>}
          </div>
        </div>
      </div>
    </>
  );
}
